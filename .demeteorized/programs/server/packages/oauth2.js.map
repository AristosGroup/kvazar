{"version":3,"file":"/packages/oauth2.js","sources":["oauth2/oauth2_server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qB;AACA,8D;AACA,oC;AACA,qB;AACA,gE;AACA,+D;;AAEA,oC;AACA,wD;;AAEA,6C;AACA,yD;AACA,2C;AACA,+C;AACA,sC;AACA,U;AACA,G;;AAEA,yD;AACA,sB;AACA,wC;AACA,E","sourcesContent":["// connect middleware\nOauth._requestHandlers['2'] = function (service, query, res) {\n  // check if user authorized access\n  if (!query.error) {\n    // Prepare the login results before returning.  This way the\n    // subsequent call to the `login` method will be immediate.\n\n    // Run service-specific handler.\n    var oauthResult = service.handleOauthRequest(query);\n\n    // Add the login result to the result map\n    Oauth._loginResultForCredentialToken[query.state] = {\n          serviceName: service.serviceName,\n          serviceData: oauthResult.serviceData,\n          options: oauthResult.options\n        };\n  }\n\n  // Either close the window, redirect, or render nothing\n  // if all else fails\n  Oauth._renderOauthResults(res, query);\n};\n"]}